[{"E:\\项目\\shop-front\\src\\index.js":"1","E:\\项目\\shop-front\\src\\App.js":"2","E:\\项目\\shop-front\\src\\pages\\Login\\login.jsx":"3","E:\\项目\\shop-front\\src\\pages\\Home\\home.jsx":"4","E:\\项目\\shop-front\\src\\pages\\Rigister\\rigister.jsx":"5","E:\\项目\\shop-front\\src\\component\\MyNavBar\\myNavBar.jsx":"6","E:\\项目\\shop-front\\src\\api\\index.js":"7","E:\\项目\\shop-front\\src\\api\\auth.js":"8","E:\\项目\\shop-front\\src\\utils\\request.js":"9","E:\\项目\\shop-front\\src\\pages\\My\\Mydetail.jsx":"10","E:\\项目\\shop-front\\src\\utils\\token.js":"11","E:\\项目\\shop-front\\src\\component\\MyTabbar\\MyTabbar.jsx":"12","E:\\项目\\shop-front\\src\\pages\\Index\\PageIndex.jsx":"13","E:\\项目\\shop-front\\src\\pages\\Map\\Mymap.jsx":"14","E:\\项目\\shop-front\\src\\pages\\Music\\Music.jsx":"15","E:\\项目\\shop-front\\src\\api\\city.js":"16"},{"size":261,"mtime":1614065570253,"results":"17","hashOfConfig":"18"},{"size":621,"mtime":1612424977623,"results":"19","hashOfConfig":"18"},{"size":3478,"mtime":1612419575610,"results":"20","hashOfConfig":"18"},{"size":1024,"mtime":1613723839366,"results":"21","hashOfConfig":"18"},{"size":2959,"mtime":1613805028350,"results":"22","hashOfConfig":"18"},{"size":906,"mtime":1613723780337,"results":"23","hashOfConfig":"18"},{"size":332,"mtime":1612232613441,"results":"24","hashOfConfig":"18"},{"size":473,"mtime":1612427225057,"results":"25","hashOfConfig":"18"},{"size":684,"mtime":1612420696312,"results":"26","hashOfConfig":"18"},{"size":2750,"mtime":1613784352896,"results":"27","hashOfConfig":"18"},{"size":335,"mtime":1612407483656,"results":"28","hashOfConfig":"18"},{"size":2002,"mtime":1612665597211,"results":"29","hashOfConfig":"18"},{"size":4282,"mtime":1613982723883,"results":"30","hashOfConfig":"18"},{"size":2268,"mtime":1613983897671,"results":"31","hashOfConfig":"18"},{"size":9365,"mtime":1614246926198,"results":"32","hashOfConfig":"18"},{"size":191,"mtime":1612682362276,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1k4it1q",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"E:\\项目\\shop-front\\src\\index.js",[],["72","73"],"E:\\项目\\shop-front\\src\\App.js",[],"E:\\项目\\shop-front\\src\\pages\\Login\\login.jsx",["74"],"import React, { Component } from 'react'\r\nimport { Flex, WingBlank, WhiteSpace ,Toast } from 'antd-mobile'\r\nimport { Link } from 'react-router-dom'\r\nimport MyNavBar from '../../component/MyNavBar/myNavBar'\r\nimport styles from './index.module.css'\r\n// 导入withFormik\r\nimport { withFormik,Form ,Field,ErrorMessage } from 'formik';\r\n// 导入yup --主要配合react  * as Yup 导入所有 并取一个 名字Yup\r\nimport * as Yup from 'yup'\r\nimport api from '../../api/index';\r\n\r\nclass Login extends Component {\r\n \r\n  render() {\r\n    return (\r\n      <div className={styles.root}>\r\n        <MyNavBar>账号登录</MyNavBar>\r\n        <WhiteSpace size=\"xl\" />\r\n\r\n        {/* 登录表单 */}\r\n        {/* WingBlank 左右 15px的 margin */}\r\n        <WingBlank>\r\n          <Form>\r\n            <div className={styles.formItem}>\r\n              {/* 用户名 \t需要自己 绑定 value +  onChange函数 实现类似的功能*/}\r\n              <Field \r\n                className={styles.input} \r\n                name=\"account\" \r\n                placeholder=\"请输入账号\">  \r\n                </Field>\r\n            </div>\r\n            {/* 如果有错误 才显示错误div 长度为5到8位，只能出现数字、字母、下划线 \r\n             errors={account: \"用户名 必须5-8位\", password: \"密码必填！\"}\r\n            */}\r\n            <ErrorMessage \r\n              className={styles.error}// 样式\r\n              name=\"account\" // 对应的错误提示字段\r\n              component=\"div\" // 是一个div 标签\r\n            ></ErrorMessage>\r\n\r\n            <div className={styles.formItem}>\r\n              {/* 密码 */}\r\n              <Field  \r\n                className={styles.input}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"请输入密码\"></Field>\r\n                \r\n            </div>\r\n            {/* 长度为5到12位，只能出现数字、字母、下划线 */}\r\n            <ErrorMessage \r\n              className={styles.error}// 样式\r\n              name=\"password\" // 对应的错误提示字段\r\n              component=\"div\" // 是一个div 标签\r\n            ></ErrorMessage>\r\n            \r\n            <div className={styles.formSubmit}>\r\n              <button className={styles.submit} type=\"primary\">\r\n                登 录\r\n              </button>\r\n            </div>\r\n          </Form>\r\n          <Flex className={styles.backHome}>\r\n            <Flex.Item>\r\n              <Link to=\"/rigister\">还没有账号，去注册~</Link>\r\n            </Flex.Item>\r\n          </Flex>\r\n        </WingBlank>\r\n      </div>\r\n    )\r\n  }\r\n \r\n}\r\nexport default withFormik({\r\n  mapPropsToValues: () => {// state\r\n     return { \r\n        account :'',\r\n        password:'' \r\n      }\r\n  },\r\n  handleSubmit: async (values, { props }) => {\r\n    console.log('数据在values',values) ;// {account: \"123\", password: \"456\"}\r\n    let res=await api.auth.login(values)\r\n    console.log('登录结果',res)\r\n    if(res.code==0){\r\n      localStorage.setItem(\"shop-token\",res.data)\r\n      Toast.success('登录成功啦~',1)\r\n      props.history.push('/')\r\n    }else{//失败 提示\r\n        Toast.fail('登录失败啦~',2)\r\n    }\r\n  },\r\n  validationSchema:Yup.object().shape({\r\n      account:Yup.string().required('用户名必填！').matches(/^\\w{5,8}$/,'用户名 必须5-8位'),\r\n      password:Yup.string().required('密码必填！').matches(/^\\w{5,20}$/,'密码   必须5-20位')\r\n  })\r\n \r\n})(Login)\r\n\r\n \r\n","E:\\项目\\shop-front\\src\\pages\\Home\\home.jsx",[],"E:\\项目\\shop-front\\src\\pages\\Rigister\\rigister.jsx",["75","76","77","78"],"import React, { useEffect } from 'react'\r\nimport { Toast, List, InputItem, WhiteSpace,Button,Checkbox } from 'antd-mobile';\r\nimport rigister from './rigister.module.scss'\r\nimport { useFormik, Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport MyNavBar from '../../component/MyNavBar/myNavBar'\r\nimport api from '../../api/index';\r\nconst AgreeItem = Checkbox.AgreeItem;\r\nconsole.log(process.env.REACT_APP_URL,'aaaaaaaaaaaaaaaa');\r\nconsole.log(process.env.REACT_APP_URL,'bbbbbbbbbbbbbbbb');\r\n\r\nfunction Rigister() {\r\n    const formik = {\r\n        initialValues: {\r\n            account: '',\r\n            password: '',\r\n            ischeck:''\r\n        },\r\n        validationSchema: Yup.object({\r\n            account: Yup.string().required('账号必填！').matches(/^\\w{5,8}$/, '用户名 必须5-8位'),\r\n            password: Yup.string().required('密码必填！').matches(/^\\w{5,20}$/, '密码   必须5-20位'),\r\n            ischeck: Yup.string().required('请勾选协议')\r\n        }),\r\n        onSubmit: async values => {\r\n            console.log(values, 'ssss')\r\n            register(values)\r\n        },\r\n    }\r\n    async function register(values) {\r\n        let res = await api.auth.rigister(values)\r\n        console.log(res,'ssssss');\r\n        if (res) {\r\n            Toast.success('注册成功', 1)\r\n        } else {\r\n            Toast.fail('注册失败', 1)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        // console.log(api, 'slfjlsdjf');\r\n    }, [])\r\n    return (\r\n        <div className={rigister.wrap}>\r\n            <MyNavBar>\r\n                注册页面\r\n            </MyNavBar>\r\n            <WhiteSpace size=\"xl\"></WhiteSpace>\r\n            <Formik\r\n                initialValues={formik.initialValues}\r\n                validationSchema={formik.validationSchema}\r\n                onSubmit={formik.onSubmit}>\r\n                <Form>\r\n                    <label htmlFor=\"account\">账号：</label>\r\n                    <Field name=\"account\" type=\"text\" />\r\n                    <ErrorMessage name=\"account\" className={rigister.errorMsg}  >\r\n                    </ErrorMessage>\r\n                    <hr />\r\n                    <label htmlFor=\"password\">密码：</label>\r\n                    <Field name=\"password\" type=\"password\" />\r\n                    <ErrorMessage name=\"password\" className={rigister.errorMsg}  >\r\n                    </ErrorMessage>\r\n                    <hr />\r\n                    <input type=\"checkbox\" name=\"ischeck\"/>请勾选协议\r\n                    <ErrorMessage name=\"ischeck\" className={rigister.errorMsg}  >\r\n                    </ErrorMessage>\r\n                    <hr />\r\n                    <Button onClick={\r\n                        ()=>{\r\n                            formik.onSubmit()\r\n                        }\r\n                    } type=\"primary\">注册</Button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rigister\r\n","E:\\项目\\shop-front\\src\\component\\MyNavBar\\myNavBar.jsx",[],"E:\\项目\\shop-front\\src\\api\\index.js",[],"E:\\项目\\shop-front\\src\\api\\auth.js",[],"E:\\项目\\shop-front\\src\\utils\\request.js",[],"E:\\项目\\shop-front\\src\\pages\\My\\Mydetail.jsx",[],"E:\\项目\\shop-front\\src\\utils\\token.js",[],"E:\\项目\\shop-front\\src\\component\\MyTabbar\\MyTabbar.jsx",["79"],"import React,{useState} from 'react'\r\nimport { TabBar } from 'antd-mobile';\r\nimport {withRouter} from 'react-router-dom'\r\nconst tabItems = [{\r\n    title: '首页',\r\n    icon: 'icon-ind',\r\n    path: '/home/index'\r\n  },\r\n  {\r\n    title: '地图',\r\n    icon: 'icon-findHouse',\r\n    path: '/home/map'\r\n  },\r\n  {\r\n    title: '音乐',\r\n    icon: 'icon-infom',\r\n    path: '/home/music'\r\n  },\r\n  {\r\n    title: '我的',\r\n    icon: 'icon-my',\r\n    path: '/home/detail'\r\n}]\r\n function MyTabbar(props) {\r\n   console.log(props,'1123123123');\r\n    const [currentTab,setCurrentTab]= useState(props.location.pathname)\r\n    function renderItem() {\r\n        return tabItems.map((item,index)=>{\r\n            return  <TabBar.Item\r\n               title={item.title} // 文字\r\n               key={index}\r\n               icon={// 默认字体图标\r\n                 <i className={`iconfont ${item.icon}`}></i>\r\n               }\r\n               selectedIcon={// 选中的字体图标\r\n                 <i className={`iconfont ${item.icon}`}></i>\r\n               }\r\n               // selected 控制当前点击的高亮 true高亮 false不高亮\r\n               selected={currentTab == item.path}\r\n               // onPress点击\r\n               onPress={() => {\r\n                 // 点击 切换单词 控制高亮\r\n                 // 改成一个 有意义的单词 好一点\r\n                 setCurrentTab(item.path)\r\n                 // 点击跳转到首页\r\n                 props.history.push(item.path) \r\n               }}\r\n             >\r\n             </TabBar.Item>\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TabBar\r\n                barTintColor='#fff'\r\n                tintColor='blue'\r\n                unselectedTintColor=\"#ccc\"\r\n                hidden={false}\r\n                noRenderContent={true}\r\n                tabBarPosition='bottom'\r\n            >\r\n             \r\n             {renderItem()}\r\n\r\n            </TabBar>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default withRouter(MyTabbar)","E:\\项目\\shop-front\\src\\pages\\Index\\PageIndex.jsx",["80","81","82","83"],"import React,{useState,useEffect,useRef} from 'react'\r\nimport { WingBlank, WhiteSpace } from 'antd-mobile';\r\n\r\nimport MyNavBar from '../../component/MyNavBar/myNavBar'\r\nimport List from 'react-virtualized/dist/commonjs/List'\r\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer'\r\nimport api from '../../api/index';\r\nimport './idnex.scss'\r\n\r\nfunction PageIndex(props) {\r\n    const listBox = useRef()\r\n   const [city, setCity] = useState({})\r\n   const [currentIndex, setCurrentIndex] = useState(0)\r\n   const [list, setList] = useState([])\r\n\r\n   let formatDara = (data) => {\r\n    console.log(data,'1111');\r\n    let res = {}\r\n    data.forEach(item => {\r\n        let acronym = item.short.substr(0, 1)\r\n        if(acronym in res){\r\n            res[acronym].push(item)\r\n        }else{\r\n         res[acronym] = [item]\r\n        }\r\n    })\r\n    console.log(res,'res');\r\n    return res\r\n}\r\n   let getCityList = async () => {\r\n       let res = await api.city.getList()\r\n       let a = formatDara(res.data)\r\n       setCity(a)\r\n      let list =  Object.keys(a)\r\n      setList(list.sort())\r\n      console.log(list,'222222222');\r\n       console.log(city,'nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn');\r\n   }\r\n   \r\n   function jumpRender (index){\r\n        console.log(index,'1111111');\r\n        listBox.current.scrollToRow(index)\r\n   }\r\n   function jump (city) {\r\n       props.history.push({\r\n           pathname:\"/home/map\",\r\n           state:{\r\n               city\r\n           }\r\n       })\r\n   }\r\n   useEffect(()=>{\r\n        getCityList()\r\n   },[])\r\n   function onRowsRendered(a){\r\n    console.log(a,'某一行渲染');\r\n    setCurrentIndex(a.startIndex)\r\n   }\r\n    return (\r\n        <div className='citywrap'>\r\n            <MyNavBar>城市列表</MyNavBar>\r\n\r\n            <AutoSizer>\r\n                {({height,width}) => {\r\n                    return (\r\n                        <List\r\n                        ref={listBox}\r\n                        width={width}\r\n                        height={height}\r\n                        rowCount={list.length}\r\n                        onRowsRendered={onRowsRendered}\r\n                        rowHeight={(a) => {\r\n                            const letter = list[a.index]\r\n                            console.log(city[letter].length,'高度')\r\n                            return 50 + 30*(city[letter].length)\r\n                        }}\r\n                        rowRenderer={({ key, index, style })=>{\r\n                            // console.log(content,'contentcontentcontent');\r\n                            let letter = list[index]\r\n                            // console.log(letter,'letter');\r\n                            return (\r\n                            <div className='list' key={key} style={style} >\r\n                                    <h1>\r\n                                       { letter.toUpperCase()}\r\n                                    </h1>\r\n                                    { city[letter].map(item => {                                     \r\n                                        return (\r\n                                            <div onClick={() => {\r\n                                                jump(item.label)\r\n                                            }} className={'cityone'} key={item.value} >\r\n                                                {item.label}\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                    }\r\n                            </div>\r\n                          )\r\n                        }}>\r\n                        </List>\r\n                    )\r\n                }}\r\n            </AutoSizer>\r\n            <ul style={{position:'fixed',right:0,width:'30'}}>\r\n            {\r\n                list.map((item,index) => {\r\n                    return (\r\n                      <li onClick={()=>{\r\n                        jumpRender(index)\r\n                      }} key={index} className={[\"leftleter\",index ==currentIndex ?'cityIndex':''].join(' ')}>\r\n                          {item.toUpperCase()}\r\n                      </li>\r\n                    )\r\n                })\r\n            }\r\n            </ul>\r\n        \r\n\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageIndex\r\n","E:\\项目\\shop-front\\src\\pages\\Map\\Mymap.jsx",["84","85"],"import { func } from 'prop-types';\r\nimport React, { useEffect } from 'react'\r\nimport MyNavBar from '../../component/MyNavBar/myNavBar'\r\n\r\nlet BMap=window.BMap\r\nlet BMapGL=window.BMapGL\r\nconsole.log(window,'2222222');\r\n// 添加  自定义控件\r\nfunction SearchConroler(){\r\n    this.defaultAnchor = window.BMAP_ANCHOR_TOP_LEFT\r\n    this.defaultOffset = new BMapGL.Size(20,20)\r\n}\r\n\r\nSearchConroler.prototype = new BMapGL.Control()\r\nSearchConroler.prototype.initialize = function (map){\r\n    var div = document.createElement('div')\r\n    div.style.width='100px'\r\n    div.style.height='100px'\r\n    div.style.background='red'\r\n    var input = document.createElement('input')\r\n    input.type = 'input'\r\n    input.value = '请输入路线'\r\n    div.appendChild(input)\r\n    map.getContainer().appendChild(div)\r\n    return div\r\n}\r\nvar map \r\nexport default function Mymap(props) {\r\n    console.log(props);\r\n   \r\n    function renderMap(callback) {\r\n         map = new BMapGL.Map(\"container\");\r\n       \r\n        // 创建地图实例  \r\n        map.enableScrollWheelZoom(true);  //开启鼠标滚轮缩放\r\n\r\n        // var point = new BMapGL.Point(116.404, 39.915);\r\n        // 创建点坐标  \r\n         map.centerAndZoom('北京市', 12);\r\n        // 添加定位控件\r\n       var locationControl = new BMapGL.LocationControl({\r\n            // 控件基于停靠位置的偏移量（可选）\r\n            offset: new BMapGL.Size(20, 20)\r\n        });\r\n        map.addControl(locationControl)\r\n        // map.addControl(new BMap.NavigationControl());    \r\n        map.addControl(new BMap.ScaleControl());    \r\n        // map.addControl(new BMap.OverviewMapControl());    \r\n        map.addControl(new BMap.MapTypeControl());\r\n        var mapWay = new SearchConroler()\r\n        map.addControl(mapWay)\r\n    }\r\n    function centermap(){\r\n       let city =  props.location.state.city \r\n       if(!city) return\r\n  \r\n       map.centerAndZoom(city+'市',12)\r\n    }\r\n    useEffect(()=>{\r\n        renderMap();\r\n        props.location.state&& centermap()\r\n\r\n    },[])\r\n    return (\r\n        <>\r\n        <MyNavBar>地图演示</MyNavBar>\r\n\r\n        <div id=\"container\" style={{\r\n            width:'100%',\r\n            height:'100%',\r\n        }}>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","E:\\项目\\shop-front\\src\\pages\\Music\\Music.jsx",["86","87","88","89"],"E:\\项目\\shop-front\\src\\api\\city.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":85,"column":16,"nodeType":"96","messageId":"97","endLine":85,"endColumn":18},{"ruleId":"98","severity":1,"message":"99","line":2,"column":17,"nodeType":"100","messageId":"101","endLine":2,"endColumn":21},{"ruleId":"98","severity":1,"message":"102","line":2,"column":23,"nodeType":"100","messageId":"101","endLine":2,"endColumn":32},{"ruleId":"98","severity":1,"message":"103","line":4,"column":10,"nodeType":"100","messageId":"101","endLine":4,"endColumn":19},{"ruleId":"98","severity":1,"message":"104","line":8,"column":7,"nodeType":"100","messageId":"101","endLine":8,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":39,"column":37,"nodeType":"96","messageId":"97","endLine":39,"endColumn":39},{"ruleId":"98","severity":1,"message":"105","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":19},{"ruleId":"98","severity":1,"message":"106","line":2,"column":21,"nodeType":"100","messageId":"101","endLine":2,"endColumn":31},{"ruleId":"107","severity":1,"message":"108","line":54,"column":6,"nodeType":"109","endLine":54,"endColumn":8,"suggestions":"110"},{"ruleId":"94","severity":1,"message":"95","line":109,"column":68,"nodeType":"96","messageId":"97","endLine":109,"endColumn":70},{"ruleId":"98","severity":1,"message":"111","line":1,"column":10,"nodeType":"100","messageId":"101","endLine":1,"endColumn":14},{"ruleId":"107","severity":1,"message":"112","line":63,"column":7,"nodeType":"109","endLine":63,"endColumn":9,"suggestions":"113"},{"ruleId":"98","severity":1,"message":"114","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":19},{"ruleId":"98","severity":1,"message":"115","line":7,"column":10,"nodeType":"100","messageId":"101","endLine":7,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":66,"column":13,"nodeType":"96","messageId":"97","endLine":66,"endColumn":15},{"ruleId":"98","severity":1,"message":"116","line":151,"column":14,"nodeType":"100","messageId":"101","endLine":151,"endColumn":17},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'List' is defined but never used.","Identifier","unusedVar","'InputItem' is defined but never used.","'useFormik' is defined but never used.","'AgreeItem' is assigned a value but never used.","'WingBlank' is defined but never used.","'WhiteSpace' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCityList'. Either include it or remove the dependency array.","ArrayExpression",["119"],"'func' is defined but never used.","React Hook useEffect has missing dependencies: 'centermap' and 'props.location.state'. Either include them or remove the dependency array.",["120"],"'ReactPlayer' is defined but never used.","'object' is defined but never used.","'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [getCityList]",{"range":"125","text":"126"},"Update the dependencies array to be: [centermap, props.location.state]",{"range":"127","text":"128"},[1536,1538],"[getCityList]",[1931,1933],"[centermap, props.location.state]"]