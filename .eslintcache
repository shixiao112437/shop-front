[{"E:\\项目\\shop-front\\src\\index.js":"1","E:\\项目\\shop-front\\src\\App.js":"2","E:\\项目\\shop-front\\src\\pages\\Login\\login.jsx":"3","E:\\项目\\shop-front\\src\\pages\\Home\\home.jsx":"4","E:\\项目\\shop-front\\src\\pages\\Rigister\\rigister.jsx":"5","E:\\项目\\shop-front\\src\\component\\MyNavBar\\myNavBar.jsx":"6","E:\\项目\\shop-front\\src\\api\\index.js":"7","E:\\项目\\shop-front\\src\\api\\auth.js":"8","E:\\项目\\shop-front\\src\\utils\\request.js":"9","E:\\项目\\shop-front\\src\\pages\\My\\Mydetail.jsx":"10","E:\\项目\\shop-front\\src\\utils\\token.js":"11","E:\\项目\\shop-front\\src\\component\\MyTabbar\\MyTabbar.jsx":"12","E:\\项目\\shop-front\\src\\pages\\Index\\PageIndex.jsx":"13","E:\\项目\\shop-front\\src\\pages\\Map\\Mymap.jsx":"14","E:\\项目\\shop-front\\src\\pages\\Music\\Music.jsx":"15","E:\\项目\\shop-front\\src\\api\\city.js":"16","E:\\项目\\shop-front\\src\\utils\\other.js":"17","E:\\项目\\shop-front\\src\\pages\\Music\\MusciList\\index.jsx":"18","E:\\项目\\shop-front\\src\\api\\music.js":"19","E:\\项目\\shop-front\\src\\pages\\Slide\\index.jsx":"20","E:\\项目\\shop-front\\src\\component\\SlideCheck\\index.jsx":"21","E:\\项目\\shop-front\\src\\pages\\Sports\\Sports.jsx":"22","E:\\项目\\shop-front\\src\\pages\\Shop\\index.jsx":"23","E:\\项目\\shop-front\\src\\pages\\Shop\\shopPage\\shopPage.jsx":"24","E:\\项目\\shop-front\\src\\pages\\Shop\\ShopPage\\ShopPage.jsx":"25","E:\\项目\\shop-front\\src\\component\\MySearch\\Mysearch.jsx":"26","E:\\项目\\shop-front\\src\\api\\shop.js":"27","E:\\项目\\shop-front\\src\\pages\\Shop\\Category\\Category.jsx":"28","E:\\项目\\shop-front\\src\\pages\\Shop\\Category\\Category1.jsx":"29","E:\\项目\\shop-front\\src\\store\\reducers\\index.js":"30","E:\\项目\\shop-front\\src\\store\\reducers\\music_reducer.js":"31","E:\\项目\\shop-front\\src\\store\\reducers\\token_reduce.js":"32","E:\\项目\\shop-front\\src\\store\\reducers\\user_reduce.js":"33"},{"size":615,"mtime":1617330556761,"results":"34","hashOfConfig":"35"},{"size":1037,"mtime":1615948049891,"results":"36","hashOfConfig":"35"},{"size":4755,"mtime":1617343602115,"results":"37","hashOfConfig":"35"},{"size":1334,"mtime":1615950526094,"results":"38","hashOfConfig":"35"},{"size":3549,"mtime":1616402134741,"results":"39","hashOfConfig":"35"},{"size":906,"mtime":1615961360240,"results":"40","hashOfConfig":"35"},{"size":332,"mtime":1612232613441,"results":"41","hashOfConfig":"35"},{"size":948,"mtime":1616059138243,"results":"42","hashOfConfig":"35"},{"size":684,"mtime":1612420696312,"results":"43","hashOfConfig":"35"},{"size":3621,"mtime":1616482623859,"results":"44","hashOfConfig":"35"},{"size":335,"mtime":1612407483656,"results":"45","hashOfConfig":"35"},{"size":1750,"mtime":1616120803208,"results":"46","hashOfConfig":"35"},{"size":4258,"mtime":1616120131629,"results":"47","hashOfConfig":"35"},{"size":2268,"mtime":1615534951358,"results":"48","hashOfConfig":"35"},{"size":10858,"mtime":1614589830226,"results":"49","hashOfConfig":"35"},{"size":191,"mtime":1612682362276,"results":"50","hashOfConfig":"35"},{"size":329,"mtime":1614564635827,"results":"51","hashOfConfig":"35"},{"size":2010,"mtime":1614651626427,"results":"52","hashOfConfig":"35"},{"size":136,"mtime":1614500660069,"results":"53","hashOfConfig":"35"},{"size":363,"mtime":1614675110929,"results":"54","hashOfConfig":"35"},{"size":5801,"mtime":1616382796076,"results":"55","hashOfConfig":"35"},{"size":1933,"mtime":1614738081724,"results":"56","hashOfConfig":"35"},{"size":968,"mtime":1616136914302,"results":"57","hashOfConfig":"35"},{"size":472,"mtime":1615966693479,"results":"58","hashOfConfig":"35"},{"size":472,"mtime":1615966693479,"results":"59","hashOfConfig":"35"},{"size":329,"mtime":1615962613337,"results":"60","hashOfConfig":"35"},{"size":233,"mtime":1615965143958,"results":"61","hashOfConfig":"35"},{"size":2908,"mtime":1616136475689,"results":"62","hashOfConfig":"35"},{"size":729,"mtime":1615966505465,"results":"63","hashOfConfig":"35"},{"size":460,"mtime":1617330559486,"results":"64","hashOfConfig":"35"},{"size":654,"mtime":1617330412998,"results":"65","hashOfConfig":"35"},{"size":315,"mtime":1617330954468,"results":"66","hashOfConfig":"35"},{"size":848,"mtime":1617331086998,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k4it1q",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\项目\\shop-front\\src\\index.js",[],"E:\\项目\\shop-front\\src\\App.js",[],["145","146"],"E:\\项目\\shop-front\\src\\pages\\Login\\login.jsx",["147"],"E:\\项目\\shop-front\\src\\pages\\Home\\home.jsx",[],"E:\\项目\\shop-front\\src\\pages\\Rigister\\rigister.jsx",["148","149","150","151"],"import React, { useEffect ,useState,useRef} from 'react'\r\nimport { Toast, List, InputItem, WhiteSpace,Button,Checkbox } from 'antd-mobile';\r\nimport rigister from './rigister.module.scss'\r\nimport { useFormik, Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport MyNavBar from '../../component/MyNavBar/myNavBar'\r\nimport api from '../../api/index';\r\nimport SlideCheck from '../../component/SlideCheck/index'\r\n\r\nconst AgreeItem = Checkbox.AgreeItem;\r\nconsole.log(process.env.REACT_APP_URL,'aaaaaaaaaaaaaaaa');\r\nconsole.log(process.env.REACT_APP_URL,'bbbbbbbbbbbbbbbb');\r\n\r\nfunction Rigister() {\r\n  const [modal, setModal] = useState(false)\r\n  let formRef = useRef()\r\n    const formik = {\r\n        initialValues: {\r\n            account: '',\r\n            password: '',\r\n            ischeck:''\r\n        },\r\n        validationSchema: Yup.object({\r\n            account: Yup.string().required('账号必填！').matches(/^\\w{5,8}$/, '用户名 必须5-8位'),\r\n            password: Yup.string().required('密码必填！').matches(/^\\w{5,20}$/, '密码   必须5-20位'),\r\n            ischeck: Yup.string().required('请勾选协议')\r\n        }),\r\n        onSubmit: async values => {\r\n            console.log(values, 'ssss')\r\n            alert(values)\r\n            register(values)\r\n        },\r\n    }\r\n    async function register(values) {\r\n        let res = await api.auth.rigister({...values})\r\n        console.log(res,'ssssss');\r\n        if (res) {\r\n            Toast.success('注册成功', 1)\r\n        } else {\r\n            Toast.fail('注册失败', 1)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        // console.log(api, 'slfjlsdjf');\r\n    }, [])\r\n    return (\r\n        <div className={rigister.wrap}>\r\n            <MyNavBar>\r\n                注册页面\r\n            </MyNavBar>\r\n            <WhiteSpace size=\"xl\"></WhiteSpace>\r\n            <Formik \r\n                initialValues={formik.initialValues}\r\n                validationSchema={formik.validationSchema}\r\n              \r\n                >\r\n                <Form ref={formRef} onSubmit={formik.onSubmit}>\r\n                    <label htmlFor=\"account\">账号：</label>\r\n                    <Field className={rigister.input} name=\"account\" type=\"text\" />\r\n                   \r\n                    <ErrorMessage component='div'  name=\"account\" className={rigister.errorMsg}  >\r\n                    </ErrorMessage>\r\n              <br/>\r\n                    <label htmlFor=\"password\">密码：</label>\r\n                    <Field className={rigister.input} name=\"password\" type=\"password\" />\r\n                    <ErrorMessage component='div' name=\"password\" className={rigister.errorMsg}  >\r\n                    </ErrorMessage>\r\n              <br/>\r\n                   <div className={rigister.check}>\r\n                   <Field name=\"ischeck\" type=\"checkbox\" />\r\n                    请仔细阅读天款协议\r\n                   </div>\r\n                    \r\n                    <ErrorMessage component='div' name=\"ischeck\" className={rigister.errorMsg}  >\r\n                    </ErrorMessage>\r\n                \r\n                    <Button type=\"primary\" onClick={()=>{\r\n                     \r\n                        setModal(true)\r\n                        setTimeout(()=>{setModal(false)})\r\n                    }}>注册</Button>\r\n                </Form>\r\n            </Formik>\r\n            <SlideCheck modal={modal} success={()=>{\r\n                formik.onSubmit()\r\n            }}></SlideCheck>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rigister\r\n","E:\\项目\\shop-front\\src\\component\\MyNavBar\\myNavBar.jsx",[],"E:\\项目\\shop-front\\src\\api\\index.js",[],"E:\\项目\\shop-front\\src\\api\\auth.js",[],"E:\\项目\\shop-front\\src\\utils\\request.js",[],"E:\\项目\\shop-front\\src\\pages\\My\\Mydetail.jsx",["152"],"import React, { useState,useEffect } from 'react'\r\nimport MyNavBar from '../../component/MyNavBar/myNavBar'\r\nimport SlideCheck from '../../component/SlideCheck/index'\r\nimport { Picker, ImagePicker, TextareaItem, DatePicker, List, Button, InputItem } from 'antd-mobile';\r\nimport style from './index.module.scss'\r\nimport api from '../../api';\r\nimport {connect} from 'react-redux';\r\nconst BaseUrl = process.env.REACT_APP_URL\r\nconst DefaultPhoto = BaseUrl + '/public/img/photo.jpg'\r\n\r\nfunction Mydetail(props) {\r\n  const ageList = [{\r\n    label: '男',\r\n    value: 1\r\n  }, {\r\n    label: '女',\r\n    value: 0\r\n  }]\r\n  const [nickname, setNickname] = useState(props.myDetail.nickname) // 昵称\r\n  const [tel, setTel] = useState(props.myDetail.tel) // 昵称\r\n  const [gender, setGender] = useState(props.myDetail.gender)\r\n  const [age, setAge] = useState(props.myDetail.age)\r\n  const [birth, setBirth] = useState(new Date())\r\n  const [brief, setBrief] = useState(props.myDetail.brief)\r\n  const [files, setFiles] = useState([])\r\n  const [modal, setModal] = useState(false)\r\n  function changefile(files) {\r\n    setFiles(files)\r\n    console.log(files, '123123');\r\n  }\r\n  async function submit() {\r\n    let params = {\r\n      nickname, tel, age, birth, brief, gender: gender[0]\r\n    }\r\n    let res = await api.auth.saveinfo(params)\r\n    console.log(res);\r\n  }\r\n  function success(){\r\n    alert(1)\r\n  }\r\n  useEffect(() => {\r\n     \r\n    console.log(props,'11111111111111');\r\n  }, [])\r\n  return (\r\n    <div className={style.mywrap}>\r\n      <MyNavBar>个人信息</MyNavBar>\r\n      <div className={style.photo}>\r\n        <img src={DefaultPhoto || ''} alt=\"\" />\r\n      </div>\r\n      <List>\r\n        <InputItem onChange={val => setNickname(val)} placeholder='输入你的昵称'>\r\n          昵称\r\n        </InputItem>\r\n        <InputItem onChange={val => setTel(val)} type='phone'>\r\n          手机号\r\n        </InputItem>\r\n        <Picker\r\n          title='性别'\r\n          data={ageList}\r\n          value={gender}\r\n          onOk={v => setGender(v)}\r\n          cols={1}\r\n        >\r\n          <List.Item arrow=\"horizontal\">性别</List.Item>\r\n        </Picker>\r\n        <InputItem onChange={val => setAge(val)} maxLength={3} type='digit'>\r\n          年龄\r\n        </InputItem>\r\n        <DatePicker mode='date'\r\n          value={birth}\r\n          onOk={(val) => {\r\n            setBirth(val)\r\n            console.log(val)\r\n          }}>\r\n          <List.Item arrow=\"horizontal\">生日</List.Item>\r\n        </DatePicker>\r\n      </List>\r\n      <List>\r\n        <TextareaItem\r\n          onChange={val => setBrief(val)}\r\n          rows={3}\r\n          placeholder=\"这个人很懒还没有什么说的...\"\r\n          autoHeight title={'个性说明'}>\r\n\r\n        </TextareaItem>\r\n      </List>\r\n      <Button type='primary' onClick={submit}>提交</Button>\r\n      <ImagePicker\r\n        files={files}\r\n        onChange={changefile}\r\n        onImageClick={(index, fs) => console.log(index, fs)}\r\n        selectable={files.length < 7}\r\n      >\r\n        是是是\r\n        </ImagePicker>\r\n      <Button type='primary' onClick={() => {\r\n\r\n        props.history.push('/shop')\r\n      }}>跳转shop页面</Button>\r\n\r\n      <Button type='primary' onClick={() => {\r\n          setModal(true)\r\n          setTimeout(() => {\r\n            setModal(false)\r\n          },0);\r\n      }}>打开验证码</Button>\r\n      <SlideCheck modal={modal} success={success}></SlideCheck>\r\n\r\n    </div>\r\n  )\r\n}\r\nconst mapstate = (state,ownProps) => {\r\n  \r\n  return {\r\n    myDetail:state.userReduce,\r\n    a:ownProps\r\n  }\r\n}\r\nexport default connect(mapstate)(Mydetail)\r\n","E:\\项目\\shop-front\\src\\utils\\token.js",[],"E:\\项目\\shop-front\\src\\component\\MyTabbar\\MyTabbar.jsx",["153","154"],"import React,{useState} from 'react'\r\nimport { TabBar } from 'antd-mobile';\r\nimport {withRouter} from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\n function MyTabbar(props) {\r\n   console.log(props,'1123123123');\r\n    const [currentTab,setCurrentTab]= useState(props.location.pathname)\r\n    function renderItem() {\r\n        return props.tabs.map((item,index)=>{\r\n            return  <TabBar.Item\r\n               title={item.title} // 文字\r\n               key={index}\r\n               icon={// 默认字体图标\r\n                 <i className={`iconfont ${item.icon}`}></i>\r\n               }\r\n               selectedIcon={// 选中的字体图标\r\n                 <i className={`iconfont ${item.icon}`}></i>\r\n               }\r\n               // selected 控制当前点击的高亮 true高亮 false不高亮\r\n               selected={props.location.pathname == item.path}\r\n               // onPress点击\r\n               onPress={() => {\r\n                 // 点击 切换单词 控制高亮\r\n                 // 改成一个 有意义的单词 好一点\r\n                 setCurrentTab(item.path)\r\n                 // 点击跳转到首页\r\n                 props.history.push(item.path) \r\n               }}\r\n             >\r\n             </TabBar.Item>\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TabBar\r\n                barTintColor='#fff'\r\n                tintColor='blue'\r\n                unselectedTintColor=\"#ccc\"\r\n                hidden={false}\r\n                noRenderContent={false}\r\n                tabBarPosition='bottom'\r\n            >\r\n             {renderItem()}\r\n\r\n            </TabBar>\r\n\r\n        </>\r\n    )\r\n}\r\nMyTabbar.protoTypes = {\r\n  tabs:PropTypes.array\r\n}\r\nexport default withRouter(MyTabbar)","E:\\项目\\shop-front\\src\\pages\\Index\\PageIndex.jsx",["155","156","157","158"],"import React,{useState,useEffect,useRef} from 'react'\r\nimport { WingBlank, WhiteSpace } from 'antd-mobile';\r\n\r\nimport MyNavBar from '../../component/MyNavBar/myNavBar'\r\nimport List from 'react-virtualized/dist/commonjs/List'\r\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer'\r\nimport api from '../../api/index';\r\nimport './index.scss'\r\n\r\nfunction PageIndex(props) {\r\n    const listBox = useRef()\r\n   const [city, setCity] = useState({})\r\n   const [currentIndex, setCurrentIndex] = useState(0)\r\n   const [list, setList] = useState([])\r\n\r\n   let formatDara = (data) => {\r\n    console.log(data,'1111');\r\n    let res = {}\r\n    data.forEach(item => {\r\n        let acronym = item.short.substr(0, 1)\r\n        if(acronym in res){\r\n            res[acronym].push(item)\r\n        }else{\r\n         res[acronym] = [item]\r\n        }\r\n    })\r\n    console.log(res,'res');\r\n    return res\r\n}\r\n   let getCityList = async () => {\r\n       let res = await api.city.getList()\r\n       let a = formatDara(res.data)\r\n       setCity(a)\r\n      let list =  Object.keys(a)\r\n      setList(list.sort())\r\n      console.log(list,'222222222');\r\n       console.log(city,'nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn');\r\n   }\r\n   \r\n   function jumpRender (index){\r\n        console.log(index,'1111111');\r\n        listBox.current.scrollToRow(index)\r\n   }\r\n   function jump (city) {\r\n       props.history.push({\r\n           pathname:\"/home/map\",\r\n           state:{\r\n               city\r\n           }\r\n       })\r\n   }\r\n   useEffect(()=>{\r\n        getCityList()\r\n   },[])\r\n   function onRowsRendered(a){\r\n    console.log(a,'某一行渲染');\r\n    setCurrentIndex(a.startIndex)\r\n   }\r\n    return (\r\n        <div className='citywrap'>\r\n            <MyNavBar>城市列表</MyNavBar>\r\n\r\n            <AutoSizer>\r\n                {({height,width}) => {\r\n                    return (\r\n                        <List\r\n                        ref={listBox}\r\n                        width={width}\r\n                        height={height}\r\n                        rowCount={list.length}\r\n                        onRowsRendered={onRowsRendered}\r\n                        rowHeight={(a) => {\r\n                            const letter = list[a.index]\r\n                            console.log(city[letter].length,'高度')\r\n                            return 50 + 30*(city[letter].length)\r\n                        }}\r\n                        rowRenderer={({ key, index, style })=>{\r\n                            // console.log(content,'contentcontentcontent');\r\n                            let letter = list[index]\r\n                            // console.log(letter,'letter');\r\n                            return (\r\n                            <div className='list' key={key} style={style} >\r\n                                    <h1>\r\n                                       { letter.toUpperCase()}\r\n                                    </h1>\r\n                                    { city[letter].map(item => {                                     \r\n                                        return (\r\n                                            <div onClick={() => {\r\n                                                jump(item.label)\r\n                                            }} className={'cityone'} key={item.value} >\r\n                                                {item.label}\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                    }\r\n                            </div>\r\n                          )\r\n                        }}>\r\n                        </List>\r\n                    )\r\n                }}\r\n            </AutoSizer>\r\n            <ul className='list_city'>\r\n            {\r\n                list.map((item,index) => {\r\n                    return (\r\n                      <li onClick={()=>{\r\n                        jumpRender(index)\r\n                      }} key={index} className={[\"leftleter\",index ==currentIndex ?'cityIndex':''].join(' ')}>\r\n                          {item.toUpperCase()}\r\n                      </li>\r\n                    )\r\n                })\r\n            }\r\n            </ul>\r\n        \r\n\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageIndex\r\n","E:\\项目\\shop-front\\src\\pages\\Map\\Mymap.jsx",["159","160"],"import { func } from 'prop-types';\r\nimport React, { useEffect } from 'react'\r\nimport MyNavBar from '../../component/MyNavBar/myNavBar'\r\n\r\nlet BMap=window.BMap\r\nlet BMapGL=window.BMapGL\r\nconsole.log(window,'2222222');\r\n// 添加  自定义控件\r\nfunction SearchConroler(){\r\n    this.defaultAnchor = window.BMAP_ANCHOR_TOP_LEFT\r\n    this.defaultOffset = new BMapGL.Size(20,20)\r\n}\r\n\r\nSearchConroler.prototype = new BMapGL.Control()\r\nSearchConroler.prototype.initialize = function (map){\r\n    var div = document.createElement('div')\r\n    div.style.width='100px'\r\n    div.style.height='100px'\r\n    div.style.background='red'\r\n    var input = document.createElement('input')\r\n    input.type = 'input'\r\n    input.value = '请输入路线'\r\n    div.appendChild(input)\r\n    map.getContainer().appendChild(div)\r\n    return div\r\n}\r\nvar map \r\nexport default function Mymap(props) {\r\n    console.log(props);\r\n   \r\n    function renderMap(callback) {\r\n         map = new BMapGL.Map(\"container\");\r\n       \r\n        // 创建地图实例  \r\n        map.enableScrollWheelZoom(true);  //开启鼠标滚轮缩放\r\n\r\n        // var point = new BMapGL.Point(116.404, 39.915);\r\n        // 创建点坐标  \r\n         map.centerAndZoom('北京市', 12);\r\n        // 添加定位控件\r\n       var locationControl = new BMapGL.LocationControl({\r\n            // 控件基于停靠位置的偏移量（可选）\r\n            offset: new BMapGL.Size(20, 20)\r\n        });\r\n        map.addControl(locationControl)\r\n        // map.addControl(new BMap.NavigationControl());    \r\n        map.addControl(new BMap.ScaleControl());    \r\n        // map.addControl(new BMap.OverviewMapControl());    \r\n        map.addControl(new BMap.MapTypeControl());\r\n        var mapWay = new SearchConroler()\r\n        map.addControl(mapWay)\r\n    }\r\n    function centermap(){\r\n       let city =  props.location.state.city \r\n       if(!city) return\r\n  \r\n       map.centerAndZoom(city+'市',12)\r\n    }\r\n    useEffect(()=>{\r\n        renderMap();\r\n        props.location.state&& centermap()\r\n\r\n    },[])\r\n    return (\r\n        <>\r\n        <MyNavBar>地图演示</MyNavBar>\r\n\r\n        <div id=\"container\" style={{\r\n            width:'100%',\r\n            height:'100%',\r\n        }}>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","E:\\项目\\shop-front\\src\\pages\\Music\\Music.jsx",["161","162"],"import React, { useRef, useState, useEffect } from 'react'\r\n// import ReactPlayer from 'react-player'\r\nimport style from './index.module.scss'\r\nimport './index.scss'\r\nimport MyNavBar from '../../component/MyNavBar/myNavBar'\r\nimport { Slider } from 'antd-mobile';\r\n// import { object } from 'prop-types'\r\nimport {debounce} from '../../utils/other'\r\nimport {connect} from 'react-redux';\r\nconst lrc = `\r\n[00:00.00]骨子里的我 - 李代沫 (Demon Li)\r\n[00:04.46]词：易家扬\r\n[00:08.93]曲：Michael Willaim\r\n[00:13.39]那时候凄惨的我 吹着北风看月亮\r\n[00:18.10]\r\n[00:19.24]我记得那些人话说的多酸\r\n[00:23.15]\r\n[00:24.15]我穿过大街小巷 擦不掉一身 难堪\r\n[00:30.23]\r\n[00:31.91]死了也没人管\r\n[00:34.60]想对回忆打一枪 让我平反\r\n[00:39.95]跟昨天的昨天 上诉\r\n[00:43.41]\r\n[00:44.80]我很平凡 也很简单\r\n[00:49.23]\r\n[00:50.39]骨子里的我却很勇敢\r\n[00:54.36]\r\n[00:55.26]我还有眼泪 不用别人安慰\r\n[01:00.09]\r\n[01:01.58]重新来 我还有胜算\r\n[01:08.83]\r\n[01:12.42]一定有爱 呜呜\r\n[01:16.39]\r\n[01:18.79]那些破旧的饭馆 用梦下饭的晚餐\r\n[01:23.58]\r\n[01:24.66]那一场雷雨里一个人呐喊\r\n[01:29.81]没有思念的人 没有快乐的时光\r\n[01:35.60]好让我咬紧牙 向前闯\r\n[01:39.95]想对回忆打一枪 让我平反\r\n[01:44.72]\r\n[01:45.42]跟明天的明天 下个注\r\n[01:49.54]\r\n[01:50.23]我很平凡 也很简单\r\n[01:54.53]\r\n[01:55.87]骨子里的我却很勇敢\r\n[02:00.31]\r\n[02:01.28]我不想飞 宁可用脚去追 去流浪\r\n[02:08.28]\r\n[02:12.54]远方的港湾 还有些希望\r\n[02:16.98]\r\n[02:18.02]让我可以靠岸 啊\r\n[02:26.41]\r\n[02:34.23]我有眼泪 不用别人安慰 重新来\r\n[02:40.82]\r\n[02:45.06]我很平凡 也很简单\r\n[02:48.66]\r\n[02:50.41]骨子里的我却很勇敢\r\n[02:54.32]\r\n[02:55.76]我不想飞 宁可用脚去追 去流浪\r\n`\r\nvar lrcArr =lrc.split(`\r\n`)\r\n\r\n// console.log(lrcArr,'歌词歌词歌词歌词歌词')\r\nconst regTime = /\\[\\d{2}:\\d{2}.\\d{2,3}\\]/ // \r\nconst arr =[]\r\nlrcArr.forEach(item => {\r\n    if(item ==='') return\r\n    const key = item.match(regTime)&&item.match(regTime)[0]\r\n    const lrc = key&&item.substring(key.length)\r\n   let key1 = key&&key.substring(1,key.length-1)\r\n    arr.push({\r\n        [key1]:lrc,\r\n        current:false\r\n    })\r\n        \r\n})\r\n// console.log(arr,'sslfdjlfjasldjfl');\r\nfunction Music(props) {\r\n  \r\n    // 时间格式化处理\r\n    const getTime = time => {\r\n        if (time) {\r\n            const minute = parseInt((time / 60) % 60);\r\n            const second = parseInt(time % 60);\r\n            let minuteText = `${minute}`;\r\n            let secondText = `${second}`;\r\n            if (minute < 10) {\r\n                minuteText = `0${minute}`;\r\n            }\r\n            if (second < 10) {\r\n                secondText = `0${second}`;\r\n            }\r\n            return `${minuteText}:${secondText}`;\r\n        } else {\r\n            return \"00:00\";\r\n        }\r\n    };\r\n    // 时间格式转换成ms\r\n    const formatTimeToMs = time => {\r\n \r\n        var min = time.split(\":\")[0]\r\n        var sec = time.split(\":\")[1]\r\n        var s = Number(min * 60) + Number(sec)\r\n        return s\r\n    }\r\n\r\n    const audio = useRef()\r\n    const lyricScroll = useRef()\r\n    const [value, setValue] = useState(0)\r\n    const [isPlaying, setIsPlaying] = useState(false) // 是否在播放\r\n    const [currentTime, setCurrentTime] = useState(\"0:00\")\r\n    const [totalTime, setTotalTime] = useState(\"0:00\")\r\n    const [lrcArray, setLrcArray] = useState(arr)\r\n    const [musicid, seTmusicId] = useState(props.currentId)\r\n\r\n    const url = \"http://127.0.0.1:7001/public/music/%E9%AA%A8%E5%AD%90%E9%87%8C%E7%9A%84%E6%88%91.MP3\"\r\n  \r\n \r\n\r\n \r\n\r\n    // 渲染歌词\r\n    function renderLysrc(){\r\n        return lrcArray.map(item =>{\r\n            let key = Object.keys(item)[0]\r\n            return (\r\n                <li key={key} className={item.current?style.active:\"\"}>\r\n                    {item[key]}\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n    // 获取歌曲的总时长\r\n    function getTotalTime() {\r\n        // console.log(audio, 'audio');\r\n        let totalTime = getTime(audio.current.duration)\r\n        setTotalTime(totalTime)\r\n    }\r\n    // 播放事件\r\n    function onPlay(e) {\r\n        // console.log(e, '111');\r\n        setIsPlaying(true) // 控制播放图标\r\n        audio.current.play() // 播放事件\r\n    }\r\n    // 暂停事件\r\n    function onPause() {\r\n        setIsPlaying(false)\r\n        audio.current.pause()\r\n    };\r\n    // 进度条\r\n    const setProgress = (value) => {\r\n        const currentTime = audio.current.duration * value / 100\r\n        audio.current.currentTime = currentTime\r\n    }\r\n\r\n    //  歌词滚动实现改变歌曲时间\r\n    const lyricToProgress = (e) => {\r\n        console.log('歌词滚动了',e)\r\n    }\r\n    // 防抖处理\r\n    let _lyricToProgress = debounce(lyricToProgress,1000)\r\n\r\n    \r\n    useEffect(() => {\r\n      \r\n        //  监听歌曲播放事件\r\n        audio.current.addEventListener(\"timeupdate\", () => {\r\n            let currentTime = audio.current.currentTime // 当前播放的音乐时间\r\n            // 歌词\r\n            // debugger\r\n       /*   let res = arr.map(item => {\r\n             const time = Object.keys(item)[0]\r\n            //  console.log(`歌词时间:${formatTimeToMs(time)}\r\n            //  当前时间:${currentTime}`)\r\n             return {\r\n                 ...item,\r\n                 current:formatTimeToMs(time)<=currentTime\r\n             }\r\n            }) */\r\n            arr.forEach((item,index) => {\r\n             const time = Object.keys(item)[0]\r\n                if(formatTimeToMs(time)<=currentTime){\r\n                    arr.forEach(item1 => item1.current = false) // 排他\r\n                    item.current = true // 实现歌词高亮\r\n                    lyricScroll.current.scrollTop = index*20 // 实现歌词滚动\r\n                }\r\n            })\r\n            setLrcArray(arr)\r\n\r\n            setCurrentTime(getTime(currentTime)) // 设置进度条前面的时间\r\n            // console.log(currentTime / audio.current.duration * 100);\r\n            setValue(currentTime / audio.current.duration * 100)\r\n        })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <MyNavBar>音乐播放</MyNavBar>\r\n\r\n            {/* 歌名 */}\r\n            <div className={style.wrap} style={{\r\n                width: '100%',\r\n                height: '100%',\r\n\r\n            }}>\r\n                {/* 歌名 */}\r\n                <div className={style.songName}>\r\n                    骨子里的我\r\n            </div>\r\n                {/* 作者 */}\r\n                <div className={style.author}>\r\n                    <span>\r\n                        李代沫\r\n                </span>\r\n                    <span className={style.aciton}>\r\n                        关注\r\n                    <img src=\"\" alt=\"\" />\r\n                    </span>\r\n                </div>\r\n                {/* 歌词 */}\r\n                <div onScroll={(e) => {\r\n                   _lyricToProgress(e)\r\n                }} ref={lyricScroll} className={style.lyricWrap}>\r\n                    <ul className={style.lyric}>\r\n                    {renderLysrc()}\r\n                    </ul>\r\n                </div>\r\n           \r\n                {/* 用户操作按钮 */}\r\n                <div className={style.opration}>\r\n                    <span onClick={()=>{\r\n                         console.log(lyricScroll.current.scrollTop,'12312');\r\n                    }} className='iconfont icon-shoucang'></span>\r\n                    <span className='iconfont icon-xiazai'></span>\r\n                    <span className='iconfont icon-Augusta20yanchanghuixinxi'></span>\r\n                    <span className='iconfont icon-wsdzb_zzgzt_zzsh_mzpy_dymzpyjl'></span>\r\n                    <span onClick={() => {\r\n                        console.log(props)\r\n                    }} className='iconfont icon-gengduo'></span>\r\n                </div>\r\n                <div className={style.progress}>\r\n                    <div className={style.startTime}>\r\n                        {currentTime}\r\n                    </div>\r\n\r\n                    <div className={style.bar}>\r\n                        <Slider\r\n                            style={{ marginLeft: 30, marginRight: 30 }}\r\n                            defaultValue={0}\r\n                            value={value}\r\n                            min={0}\r\n                            max={100}\r\n                            onChange={(value) => {\r\n                                setProgress(value)\r\n                            }}\r\n                            handleStyle={{\r\n                                height: '14px',\r\n                                width: '14px',\r\n                                marginTop: '-5.5px',\r\n                                marginLeft: '0px',\r\n                                borderRadius: '7px',\r\n                                backgroundColor: '#fff',\r\n\r\n                            }}\r\n                            trackStyle={{\r\n                                backgroundColor: 'rgb(88, 178, 220)',\r\n\r\n                            }}\r\n                            railStyle={{\r\n                                backgroundColor: '#fff',\r\n                            }}\r\n                        />\r\n\r\n                    </div>\r\n\r\n                    <div className={style.endTime}>\r\n                        {totalTime}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className={style.play}>\r\n                    <span className=\"iconfont icon-xiayishou-copy\">\r\n\r\n                    </span>\r\n                    {isPlaying\r\n                        ? <span onClick={onPause} className=\"iconfont icon-bofang-zanting\"></span>\r\n\r\n                        : <span onClick={onPlay} className=\"iconfont icon-bofangzanting\"></span>\r\n                    }\r\n                    <span  className=\"iconfont icon-xiayishou\">\r\n\r\n                    </span>\r\n                </div>\r\n                <audio \r\n                style={{\r\n                    display:'none'\r\n                }}\r\n                onCanPlay={\r\n                    getTotalTime\r\n                } ref={audio}\r\n                    controls='controls' src={url}></audio>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nconst mapState = (state) => {\r\n    return {\r\n        currentId:state.currentId,\r\n        musicList:state.musicList,\r\n    }\r\n}\r\nconst mapDispatch =(dispatch) => {\r\n    return {\r\n        nextM:(value) => {\r\n            dispatch({\r\n                type:'nextMusic',\r\n                value\r\n            })\r\n        },\r\n        beforeM:(value) => {\r\n            dispatch({\r\n                type:'beforeMusic',\r\n                value\r\n            })\r\n        }\r\n    }\r\n}\r\nexport default connect(mapState,mapDispatch)(Music)\r\n","E:\\项目\\shop-front\\src\\api\\city.js",[],"E:\\项目\\shop-front\\src\\utils\\other.js",[],"E:\\项目\\shop-front\\src\\pages\\Music\\MusciList\\index.jsx",["163"],"import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport api from '../../../api/index';\r\nimport style from './index.module.scss';\r\nimport MyNavBar from '../../../component/MyNavBar/myNavBar'\r\n\r\nfunction MuciList(props) {\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n         // 获取音乐列表\r\n        async function getMucisList() {\r\n       \r\n            let {data} = await api.music.getMusicList()\r\n            console.log(data)\r\n            props.addMusic(data)\r\n        }\r\n        getMucisList()\r\n  \r\n    }, [])\r\n\r\n\r\n    const renderList = () => {\r\n        return (\r\n            props.musicList.map((item,index) => (\r\n                <li className={style.listItem} onClick={\r\n                    ()=>{\r\n                        props.history.push({\r\n                            pathname:'/home/music',\r\n                            state:{\r\n                                id:item._id\r\n                            }\r\n\r\n\r\n                        })\r\n                    }\r\n                } doubleTap key={item._id}>\r\n\r\n                   <span>{index+1}</span> \r\n                   \r\n                   {item.name}\r\n                </li>\r\n        ))\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div style={{paddingTop:'45px'}}>\r\n            <MyNavBar>\r\n                音乐播放列表\r\n            </MyNavBar>\r\n            <button onClick={() => {\r\n                console.log(props)\r\n            }}>\r\n                dianji\r\n\r\n            </button>\r\n            <ul>\r\n            {\r\n                renderList()\r\n            }\r\n            </ul>\r\n            \r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        musicList: state.reduce.musicList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMusic: (value) => {\r\n    \r\n            dispatch({\r\n                type: 'addMusic',\r\n                value\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MuciList)\r\n","E:\\项目\\shop-front\\src\\api\\music.js",[],"E:\\项目\\shop-front\\src\\pages\\Slide\\index.jsx",[],"E:\\项目\\shop-front\\src\\component\\SlideCheck\\index.jsx",["164","165"],"import React, { Component, createRef } from 'react'\r\nimport { Modal } from 'antd-mobile';\r\nimport style from './index.module.scss';\r\nimport './index.scss'\r\nimport api from '../../api/index';\r\nclass SlideCheck extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            diffx: 0,\r\n            originX: 0,\r\n            modal: false,\r\n            imgUrl: \"http://127.0.0.1:7001/public/img/photo1.jpg\", // 图片\r\n            miniImg: \"http://127.0.0.1:7001/public/img/photo.jpg\",// 小图片\r\n            text:\"\"\r\n        }\r\n        this.imgCavasRef = createRef()\r\n        // 占位符ref对象\r\n        this.miniCavasRef = createRef()\r\n        this.ctxs = []\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                maskClosable={true}\r\n                visible={this.state.modal}\r\n                transparent={true}\r\n                popup={true}\r\n                className={'slideModal'}\r\n                wrapClassName={'myWrapModal'}\r\n                animationType={'slide-up'}\r\n            >\r\n                <div className={style.top}>\r\n                    <span>完成图片验证</span>\r\n\r\n                    <span>\r\n                        <a onClick={this.reset}>换一张</a>\r\n                    </span>\r\n                </div>\r\n\r\n\r\n\r\n                <div className={style.cavas}>\r\n                    <canvas ref={this.imgCavasRef}></canvas>\r\n                    <canvas style={{\r\n                        left: this.state.diffX + 'px'\r\n                    }} ref={this.miniCavasRef}></canvas>\r\n                </div>\r\n\r\n                <div className={style.tip}>\r\n                   {this.state.text}\r\n                </div>\r\n\r\n                <div className={style.slideBlock}>\r\n                    <div className={style.wrap}>\r\n                        <span>\r\n                            向右滑动完成拼图\r\n                           </span>\r\n                        <div\r\n                            style={{\r\n                                left: this.state.diffX + 'px'\r\n                            }}\r\n                            onTouchStart={(e) => {\r\n                                this.start(e)\r\n                            }}\r\n                            onTouchMove={\r\n                                (e) => {\r\n                                    this.move(e)\r\n                                }\r\n                            }\r\n                            onTouchEnd={\r\n                                (e) => {\r\n                                    this.end(e)\r\n                                }\r\n                            }\r\n                            className={style.black}>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    // 绘制cavas\r\n    drawImage(url, ref, w = 310) {\r\n        let img = document.createElement('img')\r\n        img.src = url\r\n        let ctx = ref.current.getContext(\"2d\")\r\n        this.ctxs.push(ctx)\r\n        img.onload = () => {\r\n            img.src = url\r\n            ctx.drawImage(img, 0, 0, w, 155)\r\n        };\r\n\r\n    }\r\n    // 获取验证码信息\r\n     getVerific = async (cb = () => {}) =>{\r\n        console.log(this,'验证');\r\n        let res = await api.auth.getVerific()\r\n        console.log(res);\r\n        this.setState({\r\n            imgUrl: res.data.imgUrl, // 图片\r\n            miniImg: res.data.miniImg// 小图片\r\n        }, () => {\r\n            this.drawImage(this.state.imgUrl, this.imgCavasRef)\r\n            this.drawImage(this.state.miniImg, this.miniCavasRef, 40)\r\n        })\r\n        cb()\r\n\r\n    }\r\n    // 校验码验证\r\n    async verify() {\r\n        let params = {\r\n            tokenId: '',\r\n            left: this.state.diffX,\r\n        }\r\n        let res = await api.auth.checkVerific(params)\r\n\r\n        if (res.code == 0) {\r\n            // 成功 调用成功回调\r\n            let text = \"验证成功\"\r\n            this.setState({\r\n                modal: false,\r\n                text\r\n            }, () => {\r\n                this.clearCavas()\r\n                this.props.success()\r\n            })\r\n        } else {\r\n            // 失败 调用失败回调\r\n            // 清空cavas  \r\n            let text = \"验证失败\"\r\n            this.setState({text})\r\n            this.clearCavas(this.getVerific)\r\n\r\n        }\r\n    }\r\n    // 接受到新的nextProps 是触发\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps, 'props');\r\n\r\n        nextProps.modal && this.setState({\r\n            modal: nextProps.modal\r\n        }, () => {\r\n            this.getVerific()\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n    start = (e) => {\r\n        console.log(e, 'start');\r\n        let originX = e.changedTouches[0].clientX\r\n        this.setState({\r\n            originX\r\n        }, () => {\r\n\r\n        })\r\n    }\r\n    move = (e) => {\r\n        let clientX = e.changedTouches[0].clientX\r\n\r\n        let diffX = clientX - this.state.originX\r\n        // console.log(diffX, 'diffx');\r\n        if (diffX < 0 || diffX > 340) return false\r\n        this.setState({ diffX }, () => {\r\n            //    let eve =  e.nativeEvent 原生事件\r\n            //    eve.target.style.left = diffX+'px'\r\n            //    this.miniCavasRef.current.style.left = diffX+'px'\r\n\r\n        })\r\n\r\n    }\r\n    // 验证\r\n    end = (e) => {\r\n        this.verify()\r\n    }\r\n    // 初始化cavas reset 避免图像重叠\r\n    clearCavas(cb = () => { }) {\r\n\r\n        this.ctxs.forEach(item => {\r\n            item.clearRect(0, 0, 384, 200)\r\n        })\r\n        this.setState({\r\n            diffX: 0\r\n        })\r\n      \r\n        cb()\r\n    }\r\n    // 刷新\r\n    reset = () => {\r\n        this.clearCavas(this.getVerific)\r\n    }\r\n}\r\n\r\nexport default SlideCheck","E:\\项目\\shop-front\\src\\pages\\Sports\\Sports.jsx",[],"E:\\项目\\shop-front\\src\\pages\\Shop\\index.jsx",[],"E:\\项目\\shop-front\\src\\pages\\Shop\\shopPage\\shopPage.jsx",[],"E:\\项目\\shop-front\\src\\pages\\Shop\\ShopPage\\ShopPage.jsx",["166"],"import React, { useEffect, useState } from 'react'\r\nimport Mysearch from '../../../component/MySearch/Mysearch'\r\nimport api from '../../../api/index'\r\nexport default function ShopPage() {\r\n\r\n    async function getCarousel() {\r\n        let res = await api.shop.getCarousel()\r\n        console.log(res, '1111111111');\r\n    }\r\n    useEffect(()=>{\r\n        getCarousel()\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Mysearch></Mysearch>\r\n        </div>\r\n    )\r\n}\r\n","E:\\项目\\shop-front\\src\\component\\MySearch\\Mysearch.jsx",[],"E:\\项目\\shop-front\\src\\api\\shop.js",[],"E:\\项目\\shop-front\\src\\pages\\Shop\\Category\\Category.jsx",["167","168"],"import React, { Component, createRef } from 'react'\r\nimport style from './index.module.scss'\r\nimport api from '../../../api/index'\r\nimport Mysearch from '../../../component/MySearch/Mysearch'\r\n\r\nexport default class Category extends Component {\r\n    state = {\r\n        navs: [],\r\n        content: [],\r\n        navIndex: 0\r\n\r\n    }\r\n    contentRef = createRef()\r\n    data = []\r\n    render() {\r\n        return (\r\n            <>\r\n            <Mysearch></Mysearch>\r\n            <div className={style.contain}>\r\n                <div className={style.leftNav}>\r\n                    {this.renderNavs()}\r\n                </div>\r\n                <div ref={this.contentRef} className={style.rightContent}>\r\n                    {this.renderContent()}\r\n                </div>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n    async getCategoriesl() {\r\n        let { data } = this.data = await api.shop.getCategoriesl()\r\n        this.data = data\r\n        let navs = data.map(item => item.cat_name)\r\n        let content = data[this.state.navIndex].children\r\n        this.setState({\r\n            navs, content\r\n        }, () => {\r\n            console.log(this.state, 'wwwwwwwwwwwwwwwwwwww');\r\n        })\r\n\r\n    }\r\n    // 菜单渲染\r\n    renderNavs() {\r\n        return this.state.navs.map((item, index) => {\r\n            return (\r\n                <div onClick={(a) => {\r\n                    this.changeNav(index, a)\r\n                }} className={[style.navitem, index == this.state.navIndex ? style.active : \"\"].join(' ')} key={item}>\r\n                    {item}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n    // 内容渲染\r\n    renderContent() {\r\n        return this.state.content.map(item => {\r\n            return (\r\n                <div key={item.cat_id}>\r\n                    <h1 className={style.title}>{item.cat_name}</h1>\r\n                    <div className={style.list}>\r\n                        {\r\n                            item.children && item.children.map(item1 => {\r\n                                return (\r\n                                    <div className={style.item} key={item1.cat_id}>\r\n                                        <img src={item1.cat_icon} />\r\n                                        <span>{item1.cat_name}</span>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n    // 菜单切换\r\n    changeNav = (index, a) => {\r\n        let content = this.data[index].children\r\n        console.log(content, '1111111111111');\r\n        this.setState({\r\n            navIndex: index,\r\n            content\r\n        }, () => {\r\n            console.log(this);\r\n            this.contentRef.current.scrollTop = 0\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCategoriesl()\r\n    }\r\n}\r\n","E:\\项目\\shop-front\\src\\pages\\Shop\\Category\\Category1.jsx",["169"],"E:\\项目\\shop-front\\src\\store\\reducers\\index.js",[],"E:\\项目\\shop-front\\src\\store\\reducers\\music_reducer.js",["170","171","172"],"E:\\项目\\shop-front\\src\\store\\reducers\\token_reduce.js",["173"],"E:\\项目\\shop-front\\src\\store\\reducers\\user_reduce.js",["174","175"],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":null,"fatal":true,"severity":2,"message":"180","line":116,"column":8},{"ruleId":"181","severity":1,"message":"182","line":2,"column":17,"nodeType":"183","messageId":"184","endLine":2,"endColumn":21},{"ruleId":"181","severity":1,"message":"185","line":2,"column":23,"nodeType":"183","messageId":"184","endLine":2,"endColumn":32},{"ruleId":"181","severity":1,"message":"186","line":4,"column":10,"nodeType":"183","messageId":"184","endLine":4,"endColumn":19},{"ruleId":"181","severity":1,"message":"187","line":10,"column":7,"nodeType":"183","messageId":"184","endLine":10,"endColumn":16},{"ruleId":"188","severity":1,"message":"189","line":44,"column":6,"nodeType":"190","endLine":44,"endColumn":8,"suggestions":"191"},{"ruleId":"181","severity":1,"message":"192","line":8,"column":12,"nodeType":"183","messageId":"184","endLine":8,"endColumn":22},{"ruleId":"193","severity":1,"message":"194","line":21,"column":50,"nodeType":"195","messageId":"196","endLine":21,"endColumn":52},{"ruleId":"181","severity":1,"message":"197","line":2,"column":10,"nodeType":"183","messageId":"184","endLine":2,"endColumn":19},{"ruleId":"181","severity":1,"message":"198","line":2,"column":21,"nodeType":"183","messageId":"184","endLine":2,"endColumn":31},{"ruleId":"188","severity":1,"message":"199","line":54,"column":6,"nodeType":"190","endLine":54,"endColumn":8,"suggestions":"200"},{"ruleId":"193","severity":1,"message":"194","line":109,"column":68,"nodeType":"195","messageId":"196","endLine":109,"endColumn":70},{"ruleId":"181","severity":1,"message":"201","line":1,"column":10,"nodeType":"183","messageId":"184","endLine":1,"endColumn":14},{"ruleId":"188","severity":1,"message":"202","line":63,"column":7,"nodeType":"190","endLine":63,"endColumn":9,"suggestions":"203"},{"ruleId":"181","severity":1,"message":"204","line":115,"column":12,"nodeType":"183","messageId":"184","endLine":115,"endColumn":19},{"ruleId":"181","severity":1,"message":"205","line":115,"column":21,"nodeType":"183","messageId":"184","endLine":115,"endColumn":31},{"ruleId":"188","severity":1,"message":"206","line":22,"column":8,"nodeType":"190","endLine":22,"endColumn":10,"suggestions":"207"},{"ruleId":"208","severity":1,"message":"209","line":40,"column":25,"nodeType":"210","endLine":40,"endColumn":49},{"ruleId":"193","severity":1,"message":"194","line":125,"column":22,"nodeType":"195","messageId":"196","endLine":125,"endColumn":24},{"ruleId":"181","severity":1,"message":"211","line":1,"column":28,"nodeType":"183","messageId":"184","endLine":1,"endColumn":36},{"ruleId":"193","severity":1,"message":"194","line":48,"column":53,"nodeType":"195","messageId":"196","endLine":48,"endColumn":55},{"ruleId":"212","severity":1,"message":"213","line":65,"column":41,"nodeType":"210","endLine":65,"endColumn":69},{"ruleId":"181","severity":1,"message":"214","line":6,"column":10,"nodeType":"183","messageId":"184","endLine":6,"endColumn":14},{"ruleId":"181","severity":1,"message":"215","line":1,"column":10,"nodeType":"183","messageId":"184","endLine":1,"endColumn":16},{"ruleId":"181","severity":1,"message":"216","line":10,"column":9,"nodeType":"183","messageId":"184","endLine":10,"endColumn":23},{"ruleId":"193","severity":1,"message":"194","line":13,"column":13,"nodeType":"195","messageId":"196","endLine":13,"endColumn":15},{"ruleId":"193","severity":1,"message":"194","line":7,"column":12,"nodeType":"195","messageId":"196","endLine":7,"endColumn":14},{"ruleId":"181","severity":1,"message":"217","line":1,"column":9,"nodeType":"183","messageId":"184","endLine":1,"endColumn":20},{"ruleId":"193","severity":1,"message":"194","line":22,"column":12,"nodeType":"195","messageId":"196","endLine":22,"endColumn":14},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 114 | \u001b[39m          }\u001b[33m,\u001b[39m\u001b[35m1000\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m 115 | \u001b[39m        }\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 116 | \u001b[39m      }())\u001b[0m\n\u001b[0m \u001b[90m     | \u001b[39m       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 117 | \u001b[39m    }\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 118 | \u001b[39m    settoken\u001b[33m:\u001b[39m(value) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 119 | \u001b[39m      dispatch({\u001b[0m","no-unused-vars","'List' is defined but never used.","Identifier","unusedVar","'InputItem' is defined but never used.","'useFormik' is defined but never used.","'AgreeItem' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["220"],"'currentTab' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'WingBlank' is defined but never used.","'WhiteSpace' is defined but never used.","React Hook useEffect has a missing dependency: 'getCityList'. Either include it or remove the dependency array.",["221"],"'func' is defined but never used.","React Hook useEffect has missing dependencies: 'centermap' and 'props.location.state'. Either include them or remove the dependency array.",["222"],"'musicid' is assigned a value but never used.","'seTmusicId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["223"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'navs' is assigned a value but never used.","'object' is defined but never used.","'currentMusicId' is assigned a value but never used.","'createStore' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"224","fix":"230"},"Update the dependencies array to be: [props]",{"range":"231","text":"232"},"Update the dependencies array to be: [getCityList]",{"range":"233","text":"234"},"Update the dependencies array to be: [centermap, props.location.state]",{"range":"235","text":"236"},{"range":"237","text":"232"},[1456,1458],"[props]",[1536,1538],"[getCityList]",[1931,1933],"[centermap, props.location.state]",[523,525]]